version: "3.8"

services:
  
  

  postgres:
    image: postgres:15
    container_name: laravel-postgres
    restart: always
    environment:
      POSTGRES_DB: fastapi
      POSTGRES_USER: fastapi
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - red_fastapi
  
  python:
    build:
      context: ./docker/python
    container_name: python_service
    volumes:
      - ./python:/usr/src/app
    working_dir: /usr/src/app
    command: tail -f /dev/null  # Mantener el contenedor en ejecuci√≥n
    ports:
      - "8050:8050"
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_URI=mongodb://mongo:27017/mi_db
    networks:
      - red_fastapi
    depends_on:
      - postgres
  

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    restart: always
    environment:
      - SERVICES=sqs,lambda,ses,s3,dynamodb
      - DEFAULT_REGION=us-west-2
      - DEBUG=1
      - DATA_DIR=/tmp/localstack-data
      - TMPDIR=/tmp/localstack-custom
      - CLEAN_TMP_DIR=false
      - AWS_ACCESS_KEY_ID=fake
      - AWS_SECRET_ACCESS_KEY=fake
      - SES_DISABLE_EMAIL_VERIFICATION=1
      - DISABLE_WEB_UI=false
      - WEB_UI_ENABLED=true
      - LOCALSTACK_HOSTNAME=localhost
      - EDGE_PORT=4566
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LAMBDA_EXECUTOR=docker
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
    ports:
      - "8000:4566"
      - "8085:8080"
    volumes:
      - "${LOCALSTACK_DATA_DIR:-./localstack-data}:/tmp/localstack-data"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - red_fastapi

volumes:
  pgdata:

networks:
  red_fastapi:
    name: red_fastapi
    driver: bridge
    ipam:
      config:
        - subnet: 172.42.12.0/28
          gateway: 172.42.12.1